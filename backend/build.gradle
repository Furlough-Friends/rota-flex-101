plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.github.spotbugs' version '3.0.0'
	id 'pmd'
	id 'checkstyle'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

bootRun {
	args = ["--spring.profiles.active=${project.properties['profile'] ?: 'dev'}"]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

spotbugs {
	toolVersion = "4.0.0-RC1"
	ignoreFailures = false
	showProgress = true
	excludeFilter = file("$rootDir/config/spotbugs/exclusions.xml")
}

// Generates spotbugs html reports instead of xml
tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports.xml.enabled = false
	reports.html.enabled = true
}

pmd {
	ruleSets = []
	ruleSetConfig = resources.text.fromFile("$rootDir/config/pmd/ruleset.xml")
	rulePriority = 2 // Show only medium-high or higher priority warnings
	ignoreFailures = false
}

checkstyle {
	ignoreFailures = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.security:spring-security-config'
  runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
